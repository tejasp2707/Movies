{"ast":null,"code":"var _jsxFileName = \"/home/darkhunter/project/movies 2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// 120c97b0\nimport './index.css';\nimport SearchIcon from './search.svg';\nimport MovieCard from './MovieCard';\n\n// const movie1 = {\n//   \"Poster\" : \"https://m.media-amazon.com/images/M/MV5BZWQxMjcwNjItZjI0ZC00ZTc4LWIwMzItM2Q0YTZhNzI3NzdlXkEyXkFqcGdeQXVyMTA0MTM5NjI2._V1_SX300.jpg\",\n//   \"Title\" : \"Italian Spiderman\",\n//   \"Type\" :\"movie\",\n//   \"Year\" : \"2007\",\n//   \"imdbID\": \"tt2705436\"\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=120c97b0';\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search A Movie\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FTa9yldKjoKfgRc69awzbt/BuWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SearchIcon","MovieCard","jsxDEV","_jsxDEV","API_URL","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["/home/darkhunter/project/movies 2/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\n// 120c97b0\nimport './index.css'\nimport SearchIcon from './search.svg'\nimport MovieCard from './MovieCard'\n\n// const movie1 = {\n//   \"Poster\" : \"https://m.media-amazon.com/images/M/MV5BZWQxMjcwNjItZjI0ZC00ZTc4LWIwMzItM2Q0YTZhNzI3NzdlXkEyXkFqcGdeQXVyMTA0MTM5NjI2._V1_SX300.jpg\",\n//   \"Title\" : \"Italian Spiderman\",\n//   \"Type\" :\"movie\",\n//   \"Year\" : \"2007\",\n//   \"imdbID\": \"tt2705436\"\n// }\nconst API_URL  = 'http://www.omdbapi.com?apikey=120c97b0';\nconst App = () => {\n  const [movies,setMovies] = useState([]);\n\n  const [searchTerm , setSearchTerm] = useState('');\n\n  const searchMovies = async(title) => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n\n    setMovies(data.Search);\n  }\n\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n\n\n  return (\n    <div className=\"app\">\n      <h1>MovieLand</h1>\n\n      <div className=\"search\">\n        <input\n          placeholder=\"Search A Movie\"\n          value = {searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <img\n          src = {SearchIcon}\n          alt='search'\n          onClick={() => searchMovies(searchTerm)}\n        />\n      </div>\n\n      {\n        movies ?.length > 0\n          ? (\n              <div className='container'>\n                {movies.map((movie) => (\n                  <MovieCard movie = {movie}/>\n                )) }\n              </div>\n\n          ) : \n          (\n            <div className='empty'>\n              <h2>No movies found</h2>\n            </div>\n          ) \n      }\n      \n    </div>\n  );\n}\n\nexport default App"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC;AACA,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAI,wCAAwC;AACzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAM,CAACU,UAAU,EAAGC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMY,YAAY,GAAG,MAAMC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,MAAKQ,KAAM,EAAC,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCR,SAAS,CAACO,IAAI,CAACE,MAAM,CAAC;EACxB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,WAAW,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAGN,oBACER,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBpB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhB,OAAA;QACEqB,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAIhB,UAAW;QACpBiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFpB,OAAA;QACE0B,GAAG,EAAI7B,UAAW;QAClB8B,GAAG,EAAC,QAAQ;QACZC,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACF,UAAU;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGJ,CAAAhB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAGyB,MAAM,IAAG,CAAC,gBAEb7B,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBZ,MAAM,CAAC0B,GAAG,CAAEC,KAAK,iBAChB/B,OAAA,CAACF,SAAS;QAACiC,KAAK,EAAIA;MAAM;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAIRpB,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBhB,OAAA;QAAAgB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGF,CAAC;AAEV,CAAC;AAAAjB,EAAA,CArDKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAuDT,eAAeA,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}