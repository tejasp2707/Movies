{"ast":null,"code":"import{useEffect,useState}from'react';// 120c97b0\nimport'./index.css';import SearchIcon from'./search.svg';import MovieCard from'./MovieCard';// const movie1 = {\n//   \"Poster\" : \"https://m.media-amazon.com/images/M/MV5BZWQxMjcwNjItZjI0ZC00ZTc4LWIwMzItM2Q0YTZhNzI3NzdlXkEyXkFqcGdeQXVyMTA0MTM5NjI2._V1_SX300.jpg\",\n//   \"Title\" : \"Italian Spiderman\",\n//   \"Type\" :\"movie\",\n//   \"Year\" : \"2007\",\n//   \"imdbID\": \"tt2705436\"\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='http://www.omdbapi.com?apikey=120c97b0';const App=()=>{const[movies,setMovies]=useState([]);const[searchTerm,setSearchTerm]=useState('');const searchMovies=async title=>{const response=await fetch(\"\".concat(API_URL,\"&s=\").concat(title));const data=await response.json();setMovies(data.Search);};useEffect(()=>{searchMovies('Spiderman');},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MovieLand\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Search A Movie\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(\"img\",{src:SearchIcon,alt:\"search\",onClick:()=>searchMovies(searchTerm)})]}),(movies===null||movies===void 0?void 0:movies.length)>0?/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:movies.map(movie=>/*#__PURE__*/_jsx(MovieCard,{movie:movie}))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"No movies found\"})})]});};export default App;","map":{"version":3,"names":["useEffect","useState","SearchIcon","MovieCard","jsx","_jsx","jsxs","_jsxs","API_URL","App","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","concat","data","json","Search","className","children","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie"],"sources":["/home/darkhunter/project/movies 2/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\n// 120c97b0\nimport './index.css'\nimport SearchIcon from './search.svg'\nimport MovieCard from './MovieCard'\n\n// const movie1 = {\n//   \"Poster\" : \"https://m.media-amazon.com/images/M/MV5BZWQxMjcwNjItZjI0ZC00ZTc4LWIwMzItM2Q0YTZhNzI3NzdlXkEyXkFqcGdeQXVyMTA0MTM5NjI2._V1_SX300.jpg\",\n//   \"Title\" : \"Italian Spiderman\",\n//   \"Type\" :\"movie\",\n//   \"Year\" : \"2007\",\n//   \"imdbID\": \"tt2705436\"\n// }\nconst API_URL  = 'http://www.omdbapi.com?apikey=120c97b0';\nconst App = () => {\n  const [movies,setMovies] = useState([]);\n\n  const [searchTerm , setSearchTerm] = useState('');\n\n  const searchMovies = async(title) => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n\n    setMovies(data.Search);\n  }\n\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n\n\n  return (\n    <div className=\"app\">\n      <h1>MovieLand</h1>\n\n      <div className=\"search\">\n        <input\n          placeholder=\"Search A Movie\"\n          value = {searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <img\n          src = {SearchIcon}\n          alt='search'\n          onClick={() => searchMovies(searchTerm)}\n        />\n      </div>\n\n      {\n        movies?.length > 0\n          ? (\n              <div className='container'>\n                {movies.map((movie) => (\n                  <MovieCard movie = {movie}/>\n                )) }\n              </div>\n\n          ) : \n          (\n            <div className='empty'>\n              <h2>No movies found</h2>\n            </div>\n          ) \n      }\n      \n    </div>\n  );\n}\n\nexport default App"],"mappings":"AAAA,OAAQA,SAAS,CAAEC,QAAQ,KAAO,OAAO,CACzC;AACA,MAAO,aAAa,CACpB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,OAAO,CAAI,wCAAwC,CACzD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,MAAM,CAACC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAEvC,KAAM,CAACW,UAAU,CAAGC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEjD,KAAM,CAAAa,YAAY,CAAG,KAAM,CAAAC,KAAK,EAAK,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIV,OAAO,QAAAU,MAAA,CAAMH,KAAK,CAAE,CAAC,CACrD,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAElCT,SAAS,CAACQ,IAAI,CAACE,MAAM,CAAC,CACxB,CAAC,CAEDrB,SAAS,CAAC,IAAM,CACdc,YAAY,CAAC,WAAW,CAAC,CAC3B,CAAC,CAAE,EAAE,CAAC,CAGN,mBACEP,KAAA,QAAKe,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBlB,IAAA,OAAAkB,QAAA,CAAI,WAAS,CAAI,CAAC,cAElBhB,KAAA,QAAKe,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBlB,IAAA,UACEmB,WAAW,CAAC,gBAAgB,CAC5BC,KAAK,CAAIb,UAAW,CACpBc,QAAQ,CAAGC,CAAC,EAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACFpB,IAAA,QACEwB,GAAG,CAAI3B,UAAW,CAClB4B,GAAG,CAAC,QAAQ,CACZC,OAAO,CAAEA,CAAA,GAAMjB,YAAY,CAACF,UAAU,CAAE,CACzC,CAAC,EACC,CAAC,CAGJ,CAAAF,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEsB,MAAM,EAAG,CAAC,cAEZ3B,IAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBb,MAAM,CAACuB,GAAG,CAAEC,KAAK,eAChB7B,IAAA,CAACF,SAAS,EAAC+B,KAAK,CAAIA,KAAM,CAAC,CAC5B,CAAC,CACC,CAAC,cAIR7B,IAAA,QAAKiB,SAAS,CAAC,OAAO,CAAAC,QAAA,cACpBlB,IAAA,OAAAkB,QAAA,CAAI,iBAAe,CAAI,CAAC,CACrB,CACN,EAGF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}